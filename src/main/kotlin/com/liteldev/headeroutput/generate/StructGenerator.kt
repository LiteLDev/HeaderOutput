package com.liteldev.headeroutput.generate

import com.liteldev.headeroutput.HeaderOutput
import java.io.File

object StructGenerator {

    fun generate() {
        HeaderOutput.structMap.forEach { (name, structType) ->
            val file = File(HeaderOutput.GENERATE_PATH, structType.getPath())
            file.writeText(
                """
// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "${structType.getGlobalRelativePath()}"
${structType.getRelativeInclusions()}
#define BEFORE_EXTRA
${structType.beforeAddition}
#undef BEFORE_EXTRA

struct $name {

#define AFTER_EXTRA
${structType.afterAddition}
#undef AFTER_EXTRA
${structType.genAntiReconstruction()}
${structType.genPublic()}
${structType.genProtected()}
${structType.genPrivate()}
};
""".trimIndent()
            )
        }
    }
}